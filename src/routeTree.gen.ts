/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './pages/__root'
import { Route as IndexRouteImport } from './pages/index'
import { Route as FrontTopicRouteImport } from './pages/front/topic'
import { Route as FrontRoutetestRouteImport } from './pages/front/routetest'
import { Route as FrontLiveRouteImport } from './pages/front/live'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const FrontTopicRoute = FrontTopicRouteImport.update({
  id: '/front/topic',
  path: '/front/topic',
  getParentRoute: () => rootRouteImport,
} as any)
const FrontRoutetestRoute = FrontRoutetestRouteImport.update({
  id: '/front/routetest',
  path: '/front/routetest',
  getParentRoute: () => rootRouteImport,
} as any)
const FrontLiveRoute = FrontLiveRouteImport.update({
  id: '/front/live',
  path: '/front/live',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/front/live': typeof FrontLiveRoute
  '/front/routetest': typeof FrontRoutetestRoute
  '/front/topic': typeof FrontTopicRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/front/live': typeof FrontLiveRoute
  '/front/routetest': typeof FrontRoutetestRoute
  '/front/topic': typeof FrontTopicRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/front/live': typeof FrontLiveRoute
  '/front/routetest': typeof FrontRoutetestRoute
  '/front/topic': typeof FrontTopicRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/front/live' | '/front/routetest' | '/front/topic'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/front/live' | '/front/routetest' | '/front/topic'
  id: '__root__' | '/' | '/front/live' | '/front/routetest' | '/front/topic'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FrontLiveRoute: typeof FrontLiveRoute
  FrontRoutetestRoute: typeof FrontRoutetestRoute
  FrontTopicRoute: typeof FrontTopicRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/front/topic': {
      id: '/front/topic'
      path: '/front/topic'
      fullPath: '/front/topic'
      preLoaderRoute: typeof FrontTopicRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/front/routetest': {
      id: '/front/routetest'
      path: '/front/routetest'
      fullPath: '/front/routetest'
      preLoaderRoute: typeof FrontRoutetestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/front/live': {
      id: '/front/live'
      path: '/front/live'
      fullPath: '/front/live'
      preLoaderRoute: typeof FrontLiveRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FrontLiveRoute: FrontLiveRoute,
  FrontRoutetestRoute: FrontRoutetestRoute,
  FrontTopicRoute: FrontTopicRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
